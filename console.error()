<script>
    // Variáveis para o Google API
    var CLIENT_ID = '533757513621-n6vdm3e4j6h9r205notvuu1qc68gt85n.apps.googleusercontent.com';
    var API_KEY = 'AIzaSyBHnu3JR3yxeqdk-vMKWo_RhansfxpvF9Q';
    var DISCOVERY_DOCS = ["https://www.googleapis.com/discovery/v1/apis/drive/v3/rest"];
    var SCOPES = 'https://www.googleapis.com/auth/drive';

    var authorizeButton = document.getElementById('authorize_button');
    var signoutButton = document.getElementById('signout_button');
    var content = document.getElementById('content');
    var F1_FOLDER_ID = '1yYedANca20yH4sfUy3o_52Jh-gejIhXK'; // ID da pasta F1
    var FD_FOLDER_ID = '1TqOFWuxZwtdUt1yrvdrRoumwwllgVosX'; // ID da pasta FD

    function handleClientLoad() {
        gapi.load('client:auth2', initClient);
    }

    function initClient() {
        gapi.client.init({
            apiKey: API_KEY,
            clientId: CLIENT_ID,
            discoveryDocs: DISCOVERY_DOCS,
            scope: SCOPES
        }).then(function () {
            gapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);
            updateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());
            authorizeButton.onclick = handleAuthClick;
            signoutButton.onclick = handleSignoutClick;
        }, function(error) {
            console.error("Erro durante a inicialização da API:", error);  // Exibe possíveis erros de inicialização
        });
    }

    function updateSigninStatus(isSignedIn) {
        if (isSignedIn) {
            authorizeButton.style.display = 'none';
            signoutButton.style.display = 'block';
            listFolders(F1_FOLDER_ID); // Lista subpastas e arquivos de F1
        } else {
            authorizeButton.style.display = 'block';
            signoutButton.style.display = 'none';
        }
    }

    function handleAuthClick() {
        gapi.auth2.getAuthInstance().signIn().catch(function(error) {
            console.error("Erro ao autenticar:", error);  // Exibe possíveis erros de autenticação
        });
    }

    function handleSignoutClick() {
        gapi.auth2.getAuthInstance().signOut();
    }

    // Listar subpastas e arquivos da pasta F1
    function listFolders(folderId) {
        gapi.client.drive.files.list({
            'q': `'${folderId}' in parents and mimeType = 'application/vnd.google-apps.folder'`,
            'fields': 'nextPageToken, files(id, name)'
        }).then(function (response) {
            var folders = response.result.files;
            var output = '<h3>Subpastas encontradas em F1:</h3><ul>';
            if (folders.length > 0) {
                folders.forEach(function (folder) {
                    output += `<li>${folder.name} <button onclick="listFiles('${folder.id}')">Ver Arquivos</button></li>`;
                });
                output += '</ul>';
                content.innerHTML = output;
            } else {
                content.innerHTML = 'Nenhuma subpasta encontrada.';
            }
        }, function(error) {
            console.error("Erro ao listar as subpastas:", error);  // Exibe possíveis erros na listagem
        });
    }

    // Listar arquivos de imagem em uma subpasta específica
    function listFiles(folderId) {
        gapi.client.drive.files.list({
            'q': `'${folderId}' in parents and mimeType contains 'image/'`,
            'fields': 'nextPageToken, files(id, name, mimeType)'
        }).then(function (response) {
            var files = response.result.files;
            var output = '<h3>Arquivos de Imagem:</h3><ul>';
            if (files.length > 0) {
                files.forEach(function (file) {
                    output += `<li>${file.name} <button onclick="downloadAndCutFile('${file.id}')">Cortar</button></li>`;
                });
                output += '</ul>';
                content.innerHTML = output;
            } else {
                content.innerHTML = 'Nenhum arquivo de imagem encontrado.';
            }
        }, function(error) {
            console.error("Erro ao listar os arquivos de imagem:", error);  // Exibe possíveis erros na listagem de arquivos
        });
    }

    handleClientLoad(); // Chama a função para carregar a API
</script>
